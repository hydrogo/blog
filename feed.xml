<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://hydrogo.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hydrogo.github.io/blog/" rel="alternate" type="text/html" /><updated>2020-09-07T05:48:08-05:00</updated><id>https://hydrogo.github.io/blog/feed.xml</id><title type="html">hydrogo</title><subtitle>Georgy Ayzel's blog</subtitle><entry><title type="html">Python libraries I use in my research</title><link href="https://hydrogo.github.io/blog/tips&tricks/2020/07/02/python-libraries.html" rel="alternate" type="text/html" title="Python libraries I use in my research" /><published>2020-07-02T00:00:00-05:00</published><updated>2020-07-02T00:00:00-05:00</updated><id>https://hydrogo.github.io/blog/tips&amp;tricks/2020/07/02/python-libraries</id><content type="html" xml:base="https://hydrogo.github.io/blog/tips&amp;tricks/2020/07/02/python-libraries.html">&lt;p&gt;I do have a pretty skimpy experience in programming. As many pupils in Russia, I had been learning Pascal for a couple of years in school. Then it was Fortran in university. During my PhD in Russia, I had written a couple of scripts also in Fortran. After that, I have stick to R for a couple of projects and finished my small journey with Python, which I use as a primary programming language since 2015.&lt;/p&gt;

&lt;p&gt;Python does have a pretty powerful standard library, but Python’s real power is in the utilization of additional libraries that can provide you an endless functionality.&lt;/p&gt;

&lt;p&gt;Below I categorize Python libraries I use in my research.&lt;/p&gt;

&lt;h2 id=&quot;general&quot;&gt;General&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://numpy.org/&quot;&gt;numpy&lt;/a&gt; – the fundamental library for scientific computing.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pandas.pydata.org/&quot;&gt;pandas&lt;/a&gt; – the fundamental library for data analysis.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.scipy.org/&quot;&gt;scipy&lt;/a&gt; – provides efficient numerical routines for, e.g., interpolation and optimization.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;geographical-analysis&quot;&gt;Geographical analysis&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;geopandas&lt;/a&gt; – &lt;code class=&quot;highlighter-rouge&quot;&gt;pandas&lt;/code&gt; for geographical data. If you have &lt;code class=&quot;highlighter-rouge&quot;&gt;.shp&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;.geojson&lt;/code&gt; files to analyze, you definitely should give &lt;code class=&quot;highlighter-rouge&quot;&gt;geopandas&lt;/code&gt; a try!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://geopandas.org/&quot;&gt;xarray&lt;/a&gt; – the best library for manipulation of meteorological datasets provided in &lt;code class=&quot;highlighter-rouge&quot;&gt;netcdf&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;grib&lt;/code&gt; formats.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.mpimet.mpg.de/projects/cdo/&quot;&gt;cdo&lt;/a&gt; – I use it exclusively for remapping meteorological data from one grid to another.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;radar-related-nowcasting&quot;&gt;Radar-related (nowcasting)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.wradlib.org/en/stable/&quot;&gt;wradlib&lt;/a&gt; – the core library for weather radar data processing.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://opencv.org/&quot;&gt;opencv&lt;/a&gt; – the fundamental library for computer vision problems (e.g., computation of optical flow).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://scikit-image.org/&quot;&gt;scikit-image&lt;/a&gt; – image processing without a pain.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;soft-matter.github.io/trackpy/&quot;&gt;trackpy&lt;/a&gt; – tracking particles made easy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;machine-learning&quot;&gt;Machine learning&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://scikit-learn.org/stable/&quot;&gt;scikit-learn&lt;/a&gt; – the core package for machine learning applications.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;tensorflow&lt;/a&gt; – deep neural networks development in a few of lines of code with built-in &lt;a href=&quot;https://keras.io/&quot;&gt;keras&lt;/a&gt; API.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/prophet/&quot;&gt;fbprophet&lt;/a&gt; – time-series forecasting library developed by Facebook. I use it for water levels forecasting in &lt;a href=&quot;https://openlevels.github.io/&quot;&gt;OpenLevels&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;plotting&quot;&gt;Plotting&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://matplotlib.org/&quot;&gt;matplotlib&lt;/a&gt; – the core library for plotting.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://seaborn.pydata.org/&quot;&gt;seaborn&lt;/a&gt; – nicer plots, &lt;code class=&quot;highlighter-rouge&quot;&gt;pandas&lt;/code&gt; support.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.bokeh.org/&quot;&gt;bokeh&lt;/a&gt; – interactive plots. For example, &lt;a href=&quot;https://openforecast.github.io/10240.html&quot;&gt;runoff forecasts&lt;/a&gt; produced by &lt;a href=&quot;https://openforecast.github.io/&quot;&gt;OpenForecast&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://python-visualization.github.io/folium/&quot;&gt;folium&lt;/a&gt; – interactive maps, e.g. like in &lt;a href=&quot;https://openforecast.github.io/&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://openlevels.github.io/&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;https://hydrogo.github.io/beats-of-the-era/&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;https://hydrogo.github.io/4Y11M2D/&quot;&gt;4&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/python-visualization/branca&quot;&gt;branca&lt;/a&gt; – customization of &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; popups in &lt;code class=&quot;highlighter-rouge&quot;&gt;folium&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;code-development&quot;&gt;Code development&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jupyter.org/&quot;&gt;jupyter&lt;/a&gt; – interactive IDE running in your web-browser.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.pylint.org/&quot;&gt;pylint&lt;/a&gt; – library developed for code analysis.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;misc&quot;&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.h5py.org/&quot;&gt;h5py&lt;/a&gt; – make use of HDF files.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://numba.pydata.org/&quot;&gt;numba&lt;/a&gt; – accelerates your code for fast compute.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://requests.readthedocs.io/en/master/&quot;&gt;requests&lt;/a&gt; – API requests for humans.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dependencies-non-direct-usage&quot;&gt;Dependencies (non-direct usage)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;pytables – HDF files processing with &lt;code class=&quot;highlighter-rouge&quot;&gt;pandas&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;xlrd – reading xls with &lt;code class=&quot;highlighter-rouge&quot;&gt;pandas&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;dask – recommended &lt;code class=&quot;highlighter-rouge&quot;&gt;xarray&lt;/code&gt; dependency.&lt;/li&gt;
  &lt;li&gt;netCDF4 – recommended &lt;code class=&quot;highlighter-rouge&quot;&gt;xarray&lt;/code&gt; dependency.&lt;/li&gt;
  &lt;li&gt;bottleneck – recommended &lt;code class=&quot;highlighter-rouge&quot;&gt;xarray&lt;/code&gt; dependency.&lt;/li&gt;
  &lt;li&gt;cartopy – recommended &lt;code class=&quot;highlighter-rouge&quot;&gt;xarray&lt;/code&gt; dependency.&lt;/li&gt;
  &lt;li&gt;pynio – recommended &lt;code class=&quot;highlighter-rouge&quot;&gt;xarray&lt;/code&gt; dependency.&lt;/li&gt;
  &lt;li&gt;pseudonetcdf – recommended &lt;code class=&quot;highlighter-rouge&quot;&gt;xarray&lt;/code&gt; dependency.&lt;/li&gt;
  &lt;li&gt;nc-time-axis – recommended &lt;code class=&quot;highlighter-rouge&quot;&gt;xarray&lt;/code&gt; dependency.&lt;/li&gt;
  &lt;li&gt;cfgrib – reading &lt;code class=&quot;highlighter-rouge&quot;&gt;grib&lt;/code&gt; files.&lt;/li&gt;
  &lt;li&gt;eccodes – &lt;code class=&quot;highlighter-rouge&quot;&gt;cfgrib&lt;/code&gt; dependency.&lt;/li&gt;
  &lt;li&gt;descartes – plotting polygons with &lt;code class=&quot;highlighter-rouge&quot;&gt;geopandas&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;pims – recommended &lt;code class=&quot;highlighter-rouge&quot;&gt;trackpy&lt;/code&gt; dependency.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-environment&quot;&gt;The environment&lt;/h2&gt;

&lt;p&gt;You can use &lt;a href=&quot;https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#creating-an-environment-from-an-environment-yml-file&quot;&gt;conda&lt;/a&gt; to install all the libraries mentioned above in one isolated programming environment. Everything you need is just to create a file &lt;code class=&quot;highlighter-rouge&quot;&gt;environment.yml&lt;/code&gt; copy-pasting the text below and then run &lt;code class=&quot;highlighter-rouge&quot;&gt;conda env create -f environment.yml&lt;/code&gt; in your terminal.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;megaenv&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;channels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;conda-forge&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;numpy&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pandas&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;scipy&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;geopandas&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;xarray&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cdo&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wradlib&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opencv&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;scikit-image&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;trackpy&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;scikit-learn&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tensorflow&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fbprophet&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;matplotlib&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;seaborn&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bokeh&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;folium&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;branca&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jupyter&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pylint&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;h5py&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;numba&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;requests&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pytables&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;xlrd&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dask&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;netCDF4&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bottleneck&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cartopy&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pynio&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pseudonetcdf&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nc-time-axis&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cfgrib&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;eccodes&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;descartes&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pims&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After the installation (can take really long), you need to activate the environment you created by running &lt;code class=&quot;highlighter-rouge&quot;&gt;conda activate megaenv&lt;/code&gt; in your terminal. Have fun!&lt;/p&gt;</content><author><name></name></author><summary type="html">I do have a pretty skimpy experience in programming. As many pupils in Russia, I had been learning Pascal for a couple of years in school. Then it was Fortran in university. During my PhD in Russia, I had written a couple of scripts also in Fortran. After that, I have stick to R for a couple of projects and finished my small journey with Python, which I use as a primary programming language since 2015.</summary></entry><entry><title type="html">Apps I use on Linux</title><link href="https://hydrogo.github.io/blog/tips&tricks/2020/07/01/linux-apps.html" rel="alternate" type="text/html" title="Apps I use on Linux" /><published>2020-07-01T00:00:00-05:00</published><updated>2020-07-01T00:00:00-05:00</updated><id>https://hydrogo.github.io/blog/tips&amp;tricks/2020/07/01/linux-apps</id><content type="html" xml:base="https://hydrogo.github.io/blog/tips&amp;tricks/2020/07/01/linux-apps.html">&lt;h2 id=&quot;prologue&quot;&gt;Prologue&lt;/h2&gt;
&lt;p&gt;I use Linux (Ubuntu LTS) as my primary operating system since 2015. Celebrating the 5th anniversary, I wish to share the list of applications (both standalone and web) I use on an everyday basis – for programming, writing, and chilling. I hope you will find some of them suitable for you to get more work done. Los!&lt;/p&gt;

&lt;h2 id=&quot;internet&quot;&gt;Internet&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/&quot;&gt;Firefox&lt;/a&gt; – my default web-browser. Security, extensions, customization capabilities are the reasons to name it the must have.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt; – some applications (usually developed by government authorities) are still optimized directly for Chrome. It is nice to have Chrome at hand for these (rare) cases.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mails&quot;&gt;Mails&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.gnome.org/Apps/Geary&quot;&gt;Geary&lt;/a&gt; – for my personal email addresses, I always use corresponding native web-services (Gmail, Yandex), all work-related emails go to Geary. Minimalism and great shortcuts rule.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;gtd&quot;&gt;GTD&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ticktick.com&quot;&gt;TickTick&lt;/a&gt; – to-do list manager. Fast, multiplatform, and customizable.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.notion.so&quot;&gt;Notion&lt;/a&gt; – a perfect tool to store all the stuff together in one place.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://keep.google.com/&quot;&gt;Google Keep&lt;/a&gt; – inbox for notes, which then go to the TickTick or Notion (or don’t).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;messengers&quot;&gt;Messengers&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://telegram.org/&quot;&gt;Telegram&lt;/a&gt; – one love for messaging.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://slack.com&quot;&gt;Slack&lt;/a&gt; – work-related chats.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;writing&quot;&gt;Writing&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/&quot;&gt;Google Docs&lt;/a&gt; – paper drafts, reviews, official documents.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.overleaf.com&quot;&gt;Overleaf&lt;/a&gt; – powerful &lt;code class=&quot;highlighter-rouge&quot;&gt;latex&lt;/code&gt; editor in your browser. The must for paper writing.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.notion.so&quot;&gt;Notion&lt;/a&gt; – notes, lists, thoughts.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS Code&lt;/a&gt; – for writing in the plain text of markdown. This post has been written in VS Code.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.gnome.org/Apps/Gedit&quot;&gt;gedit&lt;/a&gt; – lightweight text editor. A great alternative to VS Code on old machines (e.g., for my 6 y.o. laptop).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.libreoffice.org/&quot;&gt;LibreOffice&lt;/a&gt; – ugly, full of bugs, but sometimes useful for opening &lt;code class=&quot;highlighter-rouge&quot;&gt;.docx&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;programming&quot;&gt;Programming&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.anaconda.com/products/individual&quot;&gt;Anaconda&lt;/a&gt; – managing programming environments for &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter Notebook&lt;/a&gt; – interactive IDE for &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt; (other languages are also supported). Runs in your browser.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS code&lt;/a&gt; – I use the VS Code when I need to write &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt; scripts or develop libraries. Many extensions for VS Code have been developed to make software development easier – linter, auto-completion, indentation, ssh-tunnelling, to name a few.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tmux/tmux/wiki&quot;&gt;tmux&lt;/a&gt; – life-saving application to manage multiple terminals.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/screen/&quot;&gt;screen&lt;/a&gt; – when tmux is unavailable on a remote host.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nano-editor.org/&quot;&gt;nano&lt;/a&gt; – text editor that works in every terminal.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://colab.research.google.com/&quot;&gt;Google Colab&lt;/a&gt; – interactive cloud IDE for prototyping workflows that require GPU for feasible computation (e.g., deep neural networks).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://vast.ai&quot;&gt;vast.ai&lt;/a&gt; – service for renting remote hosts with GPU enabled.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zotero.org/&quot;&gt;Zotero&lt;/a&gt; – saves all academic papers in one place. Useful &lt;a href=&quot;https://ikashnitsky.github.io/2019/zotero/&quot;&gt;tips and tricks&lt;/a&gt; on customization.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.mendeley.com/&quot;&gt;Mendeley&lt;/a&gt; – I migrated from Mendeley to Zotero because of two reasons: (1) Elsevier is an evil; (2) Mendeley extensions didn’t work correctly both for Firefox and Chrome. It could be an alternative if you don’t mind the reasons above.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;drawing&quot;&gt;Drawing&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://inkscape.org/&quot;&gt;Inkscape&lt;/a&gt; – for drawing vector graphics.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kde.org/applications/en/graphics/org.kde.kolourpaint&quot;&gt;KolourPaint&lt;/a&gt; – Paint for Linux.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://app.diagrams.net/&quot;&gt;draw.io&lt;/a&gt; – for drawing diagrams (e.g., research workflows).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;virtualization&quot;&gt;Virtualization&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt; – for having WindowsXP and MS Office 2003 at hand (not a joke).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;music&quot;&gt;Music&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://music.yandex.ru/&quot;&gt;Yandex.Music&lt;/a&gt; – works in Russia.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.spotify.com&quot;&gt;Spotify&lt;/a&gt; – works outside Russia.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://feedly.com&quot;&gt;Feedly&lt;/a&gt; – RSS client that aggregates news from &lt;a href=&quot;https://habr.com&quot;&gt;Habr&lt;/a&gt;, &lt;a href=&quot;https://fivethirtyeight.com/&quot;&gt;5.38&lt;/a&gt;, and other blogs.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tweetdeck.twitter.com/&quot;&gt;Tweetdeck&lt;/a&gt; – web-client for Tweeter from Tweeter.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://telegram.org/&quot;&gt;Telegram&lt;/a&gt; – for reading channels (e.g., https://t.me/vsevstok).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;utils&quot;&gt;Utils&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.teamviewer.com&quot;&gt;TeamViewer&lt;/a&gt; – the easiest way to connect to a remote server using a graphical interface.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://doublecmd.sourceforge.io/&quot;&gt;Double Commander&lt;/a&gt; – two-panel file manager for oldies.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.deepl.com/translator&quot;&gt;DeepL&lt;/a&gt; – translator powered by deep learning. A great alternative to Google.Translator.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://surfshark.com/&quot;&gt;Surfshark&lt;/a&gt; – VPN-client.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;epilogue&quot;&gt;Epilogue&lt;/h2&gt;

&lt;p&gt;I don’t have any plans to migrate from Linux back to Windows or to macOS. I am happy and satisfied with the tools I mentioned above – it is everything what I need to get my work done.&lt;/p&gt;</content><author><name></name></author><summary type="html">Prologue I use Linux (Ubuntu LTS) as my primary operating system since 2015. Celebrating the 5th anniversary, I wish to share the list of applications (both standalone and web) I use on an everyday basis – for programming, writing, and chilling. I hope you will find some of them suitable for you to get more work done. Los!</summary></entry><entry><title type="html">Скачиваем данные об уровнях воды из ЕСИМО</title><link href="https://hydrogo.github.io/blog/tips&tricks/2020/06/26/get-esimo-data.html" rel="alternate" type="text/html" title="Скачиваем данные об уровнях воды из ЕСИМО" /><published>2020-06-26T00:00:00-05:00</published><updated>2020-06-26T00:00:00-05:00</updated><id>https://hydrogo.github.io/blog/tips&amp;tricks/2020/06/26/get-esimo-data</id><content type="html" xml:base="https://hydrogo.github.io/blog/tips&amp;tricks/2020/06/26/get-esimo-data.html">&lt;h2 id=&quot;что-такое-есимо&quot;&gt;Что такое ЕСИМО?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://esimo.ru/portal/&quot;&gt;&lt;strong&gt;ЕСИМО&lt;/strong&gt;&lt;/a&gt; – единая государственная система информации об обстановке в Мировом океане. Несмотря на название, содержит в себе базы данных наблюдений за многими параметрами окружающей среды (&lt;a href=&quot;http://esimo.ru/portal/portal/esimo-user/data&quot;&gt;посмотреть что есть&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;скачать-данные-вручную&quot;&gt;Скачать данные вручную&lt;/h2&gt;

&lt;p&gt;Представление баз данных в &lt;strong&gt;ЕСИМО&lt;/strong&gt; примерно одинаковое. Здесь и далее в качестве примера будем использовать оперативную базу данных измеренных уровней воды на гидропостах &lt;a href=&quot;http://esimo.ru/dataview/viewresource?resourceId=RU_RIHMI-WDC_1325&quot;&gt;RU_RIHMI-WDC_1325_1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Веб-интерфейс &lt;strong&gt;ЕСИМО&lt;/strong&gt; для работы с базами данных монструозный, но дело свое делает – можно отсортировать, сделать выборку по дате.&lt;/p&gt;

&lt;p&gt;На скриншоте показаны базовые элементы и какую кнопку нажать для скачивания. Я предпочитаю скачивать данные в &lt;code class=&quot;highlighter-rouge&quot;&gt;csv&lt;/code&gt; – этот формат является более универсальным и с ним легче потом работать, чем с &lt;code class=&quot;highlighter-rouge&quot;&gt;xls&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/images/2020-06-25-ESIMO.png&quot; alt=&quot;&quot; title=&quot;ЕСИМО в действии&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;Toast&quot;&gt;
   &lt;span class=&quot;Toast-icon&quot;&gt;&lt;svg class=&quot;octicon octicon-info&quot; viewBox=&quot;0 0 14 16&quot; version=&quot;1.1&quot; width=&quot;14&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M6.3 5.69a.942.942 0 01-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 01-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;
   &lt;span class=&quot;Toast-content&quot;&gt;Даже если вы выберете один день и один пост, все равно скачаются все доступные на данный момент данные&lt;/span&gt;
&lt;/div&gt;

&lt;p&gt;Недостатки такого варианта скачивания данных:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Все делается руками,&lt;/li&gt;
  &lt;li&gt;Так как данные доступны только за последние 7 дней, то заходить за оперативной информацией нужно регулярно.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;код-на-python-для-автоматической-загрузки-данных&quot;&gt;Код на python для автоматической загрузки данных&lt;/h2&gt;

&lt;p&gt;Чтобы не травмировать себя ежедневным общением с  &lt;strong&gt;ЕСИМО&lt;/strong&gt; нужно написать немного кода. Будем использовать стандартную библиотеку &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt;, а также библиотеки &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt; (для отправки запросов на сервер) и &lt;code class=&quot;highlighter-rouge&quot;&gt;pandas&lt;/code&gt; (для обработки полученных данных).&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Импортируем необходимые библиотеки
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Корневой адрес к которому мы будем делать запрос
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://esimo.ru/dataview/getresourceexport'&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;# Идентификатор нашей базы данных
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RU_RIHMI-WDC_1325_1'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Определяем даты
# Будем скачивать данные за последнюю неделю
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Сегодняшняя дата
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Запрос устроен таким образом, что отсчет начинается с завтрашнего дня
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tomorrow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;m-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;week_back&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;m-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Задаем параметры запроса
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'format'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

          &lt;span class=&quot;s&quot;&gt;'resourceid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

          &lt;span class=&quot;s&quot;&gt;'filter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(((m4400 between '{week_back}' and '{tomorrow}') or (CAST(m4400 as text) like &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%2099&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-12-31&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;)))&quot;&lt;/span&gt;

         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Отправляем POST запрос на сервер
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Считываем пришедшие данные
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Получаем данные в сыром виде, поэтому требуется 
# дополнительная обработка с помощью pandas
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StringIO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&quot;,&quot;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;usecols&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                            &lt;span class=&quot;s&quot;&gt;&quot;hydropost_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                            &lt;span class=&quot;s&quot;&gt;&quot;latitude&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                            &lt;span class=&quot;s&quot;&gt;&quot;longitude&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                            &lt;span class=&quot;s&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                            &lt;span class=&quot;s&quot;&gt;&quot;Level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                            &lt;span class=&quot;s&quot;&gt;&quot;Level_mean&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'python'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Сохраняем данные
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/Downloads/esimo_{today.strftime('&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d')}.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://colab.research.google.com/drive/1-SUHELtPx_oEDDEzdzmf6K7Jgh2Ll_fw?usp=sharing&quot;&gt;Попробовать в Google Colab&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Посмотрим на данные с гидропоста в Новокузнецке:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;data[data[&quot;id&quot;]==&quot;10240&quot;]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/images/2020-06-25-table.png&quot; alt=&quot;&quot; title=&quot;Данные по гидропосту в Новокузнецке&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Теперь у нас в руках универсальный инструмент получения оперативных данных об измеренных уровнях воды.&lt;/p&gt;

&lt;p&gt;Представленный фрагмент кода я использовал для создания системы краткосрочного прогнозирования уровня воды &lt;a href=&quot;https://openlevels.github.io/&quot;&gt;OpenLevels&lt;/a&gt;. Надеюсь, что и вам он пригодится.&lt;/p&gt;

&lt;h2 id=&quot;заключение&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;Несомненно, Росгидромету есть куда стремиться в улучшении доступа к результатам мониторинговых наблюдений на сети метеорологических станций и гидрологических постов. &lt;strong&gt;ЕСИМО&lt;/strong&gt; в зубы не смотрят, но хотя бы посмотрите как обстоят дела в США:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://waterservices.usgs.gov/&quot;&gt;Гидрологические данные&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.weather.gov/&quot;&gt;Метеорологические данные&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Отдельно отмечу оторванность нашей мониторинговой сети от глобальной сети обмена гидрологической информации &lt;a href=&quot;http://www.wmo.int/pages/prog/hwrp/chy/whos/index.php&quot;&gt;WHOS&lt;/a&gt;, созданной в рамках Всемирной метеорологической организации.&lt;/p&gt;

&lt;p&gt;Такая оторванность имеет тяжелые последствия. Например, в нашей &lt;a href=&quot;https://www.tandfonline.com/doi/full/10.1080/02626667.2020.1762886&quot;&gt;недавней работе&lt;/a&gt; мы показали, что имея доступ к национальному архиву наблюдений за речным стоком, можно существенно улучшить качество регионального гидрологического реанализа. К сожалению, отсутствие этих данных в открытом доступе ограничивает эффективность моделей, на основе которых мы можем оценивать располагаемые водные ресурсы, а также возможную динамику их изменения в будущем.&lt;/p&gt;

&lt;p&gt;Но эта уже совсем другая история.&lt;/p&gt;</content><author><name></name></author><summary type="html">Что такое ЕСИМО?</summary></entry></feed>